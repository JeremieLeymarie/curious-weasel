name: CI

on: [push]

jobs:
  client:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./client

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci
      - name: Build app
        run: npm run build
      - name: Check types
        run: npm run type-check
      - name: Run unit tests
        run: npm run test:unit

  server:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./server

    services:
      postgres:
        image: postgres:13
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: time_tracker_dev

    steps:
      - uses: actions/checkout@v4
      - uses: erlef/setup-beam@v1
        with:
          otp-version: "27"
          elixir-version: "1.17.3"
      - name: Install dependencies
        run: mix deps.get
      - name: Set up database
        env:
          MIX_ENV: test
          DATABASE_URL: ecto://postgres:postgres@localhost/time_tracker_dev
        run: |
          mix ecto.create
          mix ecto.migrate
      - name: Compile app
        run: mix compile
      - name: Run unit tests
        env:
          MIX_ENV: test
          DATABASE_URL: ecto://postgres:postgres@localhost/time_tracker_dev
        run: mix test

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: SSH to VPS and update docker
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SHH_PORT }}
          script: whoami
