services:
  client:
    container_name: client-container
    build:
      context: ./client
    ports:
      - 3000:3000
    environment:
      HOST: ${HOST}
    networks:
      - net

  api:
    container_name: api-container
    build:
      context: ./server
    ports:
      - 4000:4000
    environment:
      PGUSER: postgres
      PGPASSWORD: postgres
      PGDATABASE: time_tracker_dev
      PGPORT: 5432
      PGHOST: postgres
      HOST: ${HOST}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - net

  postgres:
    container_name: database-container
    image: postgres:16-alpine
    ports:
      - 5432:5432
    volumes:
      - ~/apps/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
    healthcheck:
      test: pg_isready -q -p 5432 -U postgres
      interval: 2s
      timeout: 10s
      retries: 120
    networks:
      - net

networks:
  net:
